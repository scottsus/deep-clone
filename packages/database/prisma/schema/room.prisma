model Clone {
    id            String @id @default(uuid())
    firstName     String @map("first_name")
    lastName      String @map("last_name")
    userAlias     String @map("user_alias")
    knowledgeBank String @map("knowledge_bank")
    intro         String
    outro         String
    Room          Room[]

    @@map("clones")
}

model Guest {
    id              String  @id @default(uuid())
    firstName       String  @map("first_name")
    lastName        String  @map("last_name")
    email           String?
    linkedInProfile String? @map("linkedin_profile")
    relation        String?
    Room            Room[]

    @@map("guests")
}

model Room {
    id       String    @id @default(uuid())
    url      String?
    cloneId  String    @map("clone_id")
    guestId  String    @map("guest_id")
    clone    Clone     @relation(fields: [cloneId], references: [id])
    guest    Guest     @relation(fields: [guestId], references: [id])
    messages Message[]

    @@index([cloneId])
    @@index([guestId])
    @@map("rooms")
}

model Message {
    id      String @id @default(uuid())
    roomId  String @map("room_id")
    role    Role
    time    Float
    content String
    room    Room   @relation(fields: [roomId], references: [id], onDelete: Cascade, onUpdate: Cascade)

    @@index([roomId])
    @@map("messages")
}

enum Role {
    GUEST
    CLONE
}
